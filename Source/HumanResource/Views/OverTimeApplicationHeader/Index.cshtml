@using GridMvc.Html;
@model IQueryable<Model.ViewModels.OverTimeApplicationHeaderViewModel>

@{

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ControllerName = (string)ViewContext.RouteData.Values["controller"];
    string IndexStatus = (string)ViewBag.IndexStatus;
}

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3>
            <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-list black"></span> @ViewBag.Name List</span>
        </h3>
        <hr style="margin-top: 0px; margin-bottom: 0px; border-top: 1px solid #706f6f" />
        <input type="hidden" class="DocType_Id" value="@ViewBag.id">
        <div class="panel-info">
            <h4 style="padding:5px 0 0 0;margin:0px">
                @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                @Html.ActionLink(" ", "Create", "OverTimeApplicationHeader", new { @id = @ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "GetHistory", "LogHistory", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip", @id = "DocHistoryI" })
                @Html.ActionLink(" ", "Detail", "OverTimeApplicationHeader", null, new { @class = "glyphicon glyphicon-info-sign toolbar", @title = "Detail", @data_toggle = "tooltip", @id = "Detail" })
                @Html.ActionLink(" ", "GeneratePrints", "OverTimeApplicationHeader", null, new { @class = "glyphicon glyphicon-print toolbar", @title = "Print", @data_toggle = "tooltip", @id = "PrintRecordI", target = "_blank" })
                @Html.ActionLink(" ", "Remove", "OverTimeApplicationHeader", null, new { @class = "glyphicon glyphicon-trash toolbar", @title = "Delete", @data_toggle = "tooltip", @id = "DeleteRecord", @data_modalDelete = "" })
                @Html.ActionLink(" ", "Report", "OverTimeApplicationHeader", new { @ViewBag.id }, new { @class = "glyphicon glyphicon-stats toolbar right", @title = "Report", @data_toggle = "tooltip", @id = "ReportRecord", target = "_blank" })
                @Html.ActionLink(" ", "Index", "PurchaseOrderExcelImport", null, new { @class = "glyphicon glyphicon-import toolbar right", @title = "Import", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "", "", null, new { @class = "glyphicon glyphicon-export toolbar right", @title = "Export", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "Create", "PurchaseOrderSetting", new { @id = @ViewBag.id }, new { @class = "glyphicon glyphicon-cog toolbar right", @title = "Default Settings", @data_toggle = "tooltip" })
                @Html.ActionLink(" ", "Index", "OverTimeApplicationHeader", new { @id = @ViewBag.id }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "Index", @data_toggle = "tooltip" })
            </h4>
        </div>
        <hr style="margin-top: 5px; margin-bottom: 5px; border-top: 1px solid #706f6f; " />
    
        @*  @CustomHelpers.RenderStatusFilters(ViewBag.PendingToSubmit, ViewBag.PendingToReview, ControllerName, ViewBag.id, ViewBag.IndexStatus)*@

    </div>

    <div class="panel-info" style="padding-left:5px;padding-top:2px">

      @*  @Html.Grid(Model).Columns(columns =>
    {
        columns.Add(m => m.OverTimeApplicationHeaderId, true).Css("Header_Id");
        columns.Add(m => m.Status, true);
        columns.Add().Encoded(false).Sanitized(false).SetWidth("5%").RenderValueAs(m => CustomHelpers.RenderCheckBox());
        columns.Add(foo => foo.DocDate).Sortable(true).Titled("Doc Date").Format("{0:dd/MMM/yyyy}").Filterable(true).Css("VAlign");
        columns.Add(m => m.DocNo).Sortable(true).Titled("Doc No.").Filterable(true).Sortable(true).Css("VAlign");
        columns.Add(m => m.Name).Sortable(true).Titled("Name").Filterable(true).Sortable(true).Css("VAlign");
        columns.Add(m => m.DepartmentName).Sortable(true).Titled("Department").Filterable(true).Css("VAlign");
        columns.Add(m => m.Remark).Sortable(true).Filterable(true).Titled("Remark").Css("VAlign");
        columns.Add().Sanitized(false).Encoded(false).RenderValueAs(m => CustomHelpers.RenderStatus(m.Status)).Titled("Status");
        columns.Add().Titled("").Encoded(false).Sanitized(false).RenderValueAs(m => CustomHelpers.RenderUserImage(m.ModifiedBy)).Titled("User").SetWidth("5%").Css("UserImageIndex");
        columns.Add().Encoded(false).Sanitized(false).RenderValueAs(m => CustomHelpers.RenderActionColumn(ControllerName, m.OverTimeApplicationHeaderId, m.Status, m.Reviewed, m.ReviewCount, (string)ViewBag.IndexStatus)).SetWidth(20).Css("icon-Cus-Size");
        columns.Add(true).RenderValueAs(m => CustomHelpers.RenderHEDActionLink(ControllerName, m.OverTimeApplicationHeaderId, m.Status, IndexStatus));
    }).WithPaging(25).EmptyText("No records found.").Sortable().Filterable().WithMultipleFilters()
    *@
    </div>
</div>