@model Model.ViewModels.MaterialViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/Scripts/Jasny/jasny-bootstrap.min.js"></script>
<link href="~/Content/jasny/jasny-bootstrap.min.css" rel="stylesheet" />


<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


@using (Html.BeginForm("PostMaterial", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.DivisionId)
    @Html.HiddenFor(m => m.ProductId)    
    @Html.HiddenFor(m=>m.ProductSiteDetailId)
    @Html.HiddenFor(m=>m.SiteId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3>
                <span style="font-family: Calibri,sans-serif,Verdana;font-weight:bold" class="black"><span class="glyphicon glyphicon-file black"></span> @ViewBag.Name</span>
                @if (@Model.IsSystemDefine)
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9;margin-left:20px" disabled="disabled" />
                    <span style="font-family: Calibri,sans-serif,Verdana; font-weight:bold ;font-size: large" class="text-danger right "><span class="glyphicon glyphicon-floppy-remove"></span> System Defined</span>
                }
                else
                {
                    <input type="submit" value="Save" class="btn btn-primary right" id="submit" style="width: 90px; background-color: #2980b9" />
                }
            </h3>
            <hr style="margin-top:0px;margin-bottom:0px" />

            <div class="panel-info">
                <h4 style="padding:5px 0 0 0;margin:0px">
                    @Html.ActionLink(" ", " ", " ", null, new { @class = "glyphicon glyphicon-refresh toolbar", @title = "Refresh Page", @data_toggle = "tooltip", @id = "RefreshPage" })
                    @Html.ActionLink(" ", "CreateMaterial", "Product", new { id = ViewBag.id }, new { @class = "glyphicon glyphicon-plus toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "History", "Product", null, new { @class = "glyphicon glyphicon-user toolbar", @title = "History", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "PrevPageMaterial", "Product", new { id = @Model.ProductId,nid=@Model.ProductGroupId}, new { @class = "glyphicon glyphicon-arrow-left toolbar", @title = "Prev Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "NextPageMaterial", "Product", new { id = @Model.ProductId, nid = @Model.ProductGroupId }, new { @class = "glyphicon glyphicon-arrow-right toolbar", @title = "Next Record", @data_toggle = "tooltip" })
                    @Html.ActionLink(" ", "MaterialIndex", "Product", new { id = ViewBag.id }, new { @class = "glyphicon glyphicon-list toolbar right", @title = "List", @data_toggle = "tooltip" })
                </h4>
            </div>
        </div>
        <div class="panel-info" style="padding-left:15px">
            <div class="form-horizontal">
                @Html.ValidationSummary(true)

                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-align-justify"></span>
                        1.@Model.ProductCategoryName Details
                    </h4>
                    <div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group" style="margin-top:15px">
                                            @Html.LabelFor(model => model.ProductName, "Product Name", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(model => model.ProductName, null, new { @class = "form-control col-xs-6 height required" })
                                                @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.ProductCode, "Product Code", new { @class = "control-label col-xs-4 " })
                                            <div class="col-xs-6">
                                                @Html.TextBoxFor(m => m.ProductCode, null, new { @class = "form-control col-xs-6 required" })
                                                @Html.ValidationMessageFor(model => model.ProductCode, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                               
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.UnitId, "Stock Unit", new { @class = "control-label col-xs-4" })
                                            <div class="col-xs-6">
                                                @Html.DropDownListFor(m => m.UnitId, new SelectList(ViewBag.UnitList as System.Collections.IEnumerable, "UnitId", "UnitName"), new { @class = "form-control col-xs-6 height" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="row">
                                    <div class="col-md-offset-4 col-md-8">
                                        <div class="fileinput fileinput-new" data-provides="fileinput">
                                            <div class="fileinput-new thumbnail" style="width: 200px; height: 150px;">
                                                <img src="~/Uploads/@(Model.ImageFolderName)/Medium/@(Model.ImageFileName)" alt="...">
                                            </div>
                                            <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 200px; max-height: 150px;"></div>
                                            <div>
                                                <span class="btn btn-default btn-file" style="background-color: transparent; color: black; font-family:Arial; border-radius:5px">
                                                    <span id="Select" class="fileinput-new">Select</span>
                                                    <span id="Change" class="fileinput-exists">Change</span>
                                                    <input type="file" name="upload">
                                                </span>
                                                <a href="#" class="btn btn-default fileinput-exists" style="background-color: transparent; color: black; font-family: Arial; border-radius: 5px" data-dismiss="fileinput">Remove</a>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProductGroupId, "Group", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.ProductGroupId, new SelectList(ViewBag.ProductGroupList as System.Collections.IEnumerable, "ProductGroupId", "ProductGroupName"), new { @class = "form-control col-xs-6 required height" })
                                        @Html.ValidationMessageFor(model => model.ProductGroupId, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                      
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.StandardCost, "Standard Cost", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.StandardCost, null, new { @class = "form-control col-xs-6 required" })
                                        @Html.ValidationMessageFor(model => model.StandardCost, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SalesTaxGroupProductId, "Sales Tax Group", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownListFor(m => m.SalesTaxGroupProductId, new SelectList(ViewBag.SalesTaxGroup as System.Collections.IEnumerable, "SalesTaxGroupProductId", "SalesTaxGroupProductName"), new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Tags, "Tags", new { @class = "control-label col-xs-4 " })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.Tags, null, new { @class = "form-control col-xs-6" })
                                        @Html.ValidationMessageFor(model => model.Tags)
                                    </div>
                                </div>
                            </div>
                        </div>
                      
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IsActive, "Is Active", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6" style=" padding-top:4px">
                                        @Html.CheckBoxFor(m => m.IsActive, new { @class = "checkbox col-xs-1" })
                                        @Html.ValidationMessageFor(model => model.IsActive)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MinimumOrderQty, "Min Order Qty", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.MinimumOrderQty, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReOrderLevel, "Reorder Level", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.ReOrderLevel, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.GodownId, "Godown", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.GodownId, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BinLocation, "Bin Location", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.TextBoxFor(m => m.BinLocation, new { @class = "form-control col-xs-6" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LotManagement, "LOT Management", new { @class = "control-label col-xs-4" })
                                    <div class="col-xs-6">
                                        @Html.DropDownList("LotManagement",null,new { @class = "form-control col-xs-6 height" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    
                </div>

                <hr />
                <div class="row">
                    <h4 class="col-md-12 black" style="margin-top:15px">
                        <span class="glyphicon glyphicon-shopping-cart"></span>
                        2.Consumption
                    </h4>
                </div>
                <div class="panel-info">
                    <h5 style="padding:5px 0 3px 0;margin:0px;font-weight:bold">
                        <span class="glyphicon glyphicon-plus-sign"></span>
                        @Html.ActionLink("Add New Row ", "_Create", "ProductConsumptionLine", new { id = @Model.ProductId }, new { data_modal = "", id = "btnCreate", @class = "toolbar", @title = "Add New", @data_toggle = "tooltip" })
                    </h5>
                </div>
                <div style="padding-right:15px">
                    <table class="table table-hover ctable">
                        <thead id="OtherContentHeader">
                        </thead>
                        <tbody id="OtherContentLine"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        var name='@Model.ProductCategoryName';
        var id=@Model.ProductTypeId;

        //CustomSelectFunction($("#ProductGroupId"), '/ComboHelpList/GetProductGroupWithTypeFilter', '/ComboHelpList/SetSingleRawMaterialProductGroup', ' ', false, 1,id);
        //CustomSelectFunction($("#ProductCategoryId"), '/ComboHelpList/GetRawMaterialProductCategory', '/ComboHelpList/SetSingleRawMaterialProductCategory', ' ', false, 1);

        //if(name=='Raw Material')
        //{
            
            
        //}
        //else if(name=='Other Material')
        //{
           
        //    CustomSelectFunction($("#ProductCategoryId"), '/ComboHelpList/GetOtherMaterialProductCategory', '/ComboHelpList/SetSingleOtherMaterialProductCategory', ' ', false, 1);
        //}      


        $("#Tags").select2({tags: true,tokenSeparators: [',', ' ']});
        CustomSelectFunction($("#GodownId"), '/ComboHelpList/GetGodown', '/ComboHelpList/SetSingleGodown', ' ', false, 1);
    });

     $(":submit").on("click", function () {
         var mpoid=@Model.ProductId;
         var tes;
         if(mpoid<=0)
         {
             tes= $('#ProductName').DuplicateCheckForCreate({ name: 'Product', value: $('#ProductName').val(), doctype: 0 });
         }
         else
         {
             tes = $('#ProductName').DuplicateCheckForEdit({ name: 'Product', value: $('#ProductName').val(), doctype: 0,headerId:mpoid });
         }
         if (tes) {
             return false;
         }
         else
         {
             return;
         }
     });



</script>

<script type="text/javascript">
    $(document).ready(function () {
        //Calling the function to load the table data/ Line information
        enableModalTransitions();
        $("#ProductName").focus();

        LoadOtherContent();
    });

    var id=@Model.ProductId;
    if(id==null||id==0)
    {
        $(document).find('a#btnCreate').removeAttr('href').removeAttr('data-modal');
    }

    //Reloading the table contents on modal hide
    $('#myModal').on('hidden.bs.modal', function () {
        LoadOtherContent();
    });

    $('#myModal').on('shown.bs.modal', function () {
        $("#ProductId").select2("focus");
    });

    //Loading the Table data or Line Information
    function LoadOtherContent() {
        var groupId=@Model.ProductId;

        var link="/ProductConsumptionLine/Index/"+groupId;

        $.ajax({
            url: link,
            type: "GET",
            success: function (data) {
                var row = ""
                var srno=1;
                var head="<tr style='background-color:#428bca'>  <th style='width:10px'><input type='hidden'  /></th> <th style='width:10px'>Serial</th><th class='center' style='width:50px'>Product</th>   <th class='center' style='width:50px'>Product Group</th>       <th class='center' style='width:50px'>Qty</th>        <th class='center' style='width:50px'>Unit</th> <th style='width:10px'></th>       <th style='width:10px'></th>  </tr>"
                if(data.length!=0)
                {
                    $.each(data, function (index, item) {
                        row += "<tr><td><input type='hidden' class='id' value='" + item.BomDetailId + "'/></td> <td>"+ srno +"</td> <td >" + (item.ProductName==null?" ":"<strong>"+item.ProductName+"</strong>") + "<div>"+(item.Dimension1Name==null?" ":item.Dimension1Name+",")+(item.Dimension2Name==null?" ":item.Dimension2Name+",")+(item.Dimension3Name==null?" ":item.Dimension3Name+",")+(item.Dimension4Name==null?" ":item.Dimension4Name+",")+"</div></td>        <td>" + item.ProductGroupName + "</td>                  <td>" + item.Qty + "</td>                  <td>" + item.UnitName + "</td>                  <td><a class='rowEditBlue hidden' Modify href='/ProductConsumptionLine/_Edit/"+item.BomDetailId+"' ></a></td>       <td><a class='glyphicon glyphicon-trash' data-modal='' delete='' href='/ProductConsumptionLine/_Edit/"+item.BomDetailId+"' ></a></td>  </tr>";
                        srno++;
                    });
                }
                else
                {
                    row+="<tr><td>No Items Found.</td></tr>";
                }
                $("#OtherContentHeader").html(head);
                $("#OtherContentLine").html(row);
            },
            error: function (BankAccoutDetail) {
                alert("Error");
            }
        });
    }

    //Loading the table data or ProductBuyer Information

    //For Populating Modal PopUp on DoubleClick Of Row
    $('#OtherContentLine').on("dblclick",'tr',function(){
        var text = $(this).find(".id").val();
        var editurl=$(this).find('a[Modify]').attr('href');


        $('#myModalContent').load(editurl, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
    });


    //For Handling Modal PopUp on Clicking Delete Icon
    $('#OtherContentLine').on("click",'a[delete]', function (e) {
        $('#myModalContent').load(this.href, function () {
            //alert('2');
            $('#myModal').modal({
                backdrop: 'static',
                keyboard: true
            }, 'show');

            bindForm1(this);
        });
        return false;
    });



    //For posting the data through ajax and render the contents sent back from the server
    function bindForm1(dialog) {
        //alert("binding");
        $('form', dialog).submit(function () {
            //alert(this.action);
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        //Refresh
                        //location.reload();
                        //alert('Data Saved');
                    }else if(!result.success)
                    {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                    else {
                        $('#myModalContent').html(result);
                        bindForm1();
                    }
                }
            });
            return false;
        });
    }

</script>